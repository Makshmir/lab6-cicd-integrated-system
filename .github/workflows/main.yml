name: Integrated System CI/CD Pipeline

on:
  push:
    branches:
      - main # Запускати при пуші в main
  pull_request:
    branches:
      - main # Запускати для Pull Requests в main (для тестування)

jobs:
  build:
    name: Build & Test App
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image for App
        id: build_app
        # Збираємо образ з тегом, який будемо використовувати для тестування
        run: docker build -t my-integrated-app:ci-test .

      # Крок 4: Налаштування автоматизованих тестів
      - name: Run Unit/Integration Tests (using Docker)
        run: |
          # Запускаємо контейнер з зібраним образом і виконуємо тести всередині
          docker run --rm my-integrated-app:ci-test pytest tests/
          # Примітка: Якщо ваші тести потребують запущеного docker compose,
          # їх краще перенести в job 'test_compose_startup' після 'docker compose up'.

  # --- (ОПЦІОНАЛЬНО) Етап публікації образу в Docker Hub ---
  # Якщо ви не хочете публікувати образ, видаліть або закоментуйте цей job.
  # Вам потрібно буде налаштувати секрети DOCKERHUB_USERNAME та DOCKERHUB_TOKEN.
  push_image:
    name: Push Docker Image to Registry
    runs-on: ubuntu-latest
    needs: build # Запускати тільки після успішного build & test
    # Публікуємо тільки при прямому пуші в main, не для PR
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          # Тегуємо двома тегами: latest та унікальним SHA коміту
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-integrated-app:latest,${{ secrets.DOCKERHUB_USERNAME }}/my-integrated-app:${{ github.sha }}

  # --- Етап перевірки запуску Docker Compose ---
  # Цей етап замінює розгортання. Він перевіряє, чи може ваше
  # середовище (визначене в docker compose.yml) успішно запуститись
  # на машині GitHub Actions runner.
  test_compose_startup:
    name: Test Docker Compose Startup
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image for App (if needed by compose image^ tag)
        # Якщо ваш docker compose.yml використовує `build: .` для сервісу 'app',
        # цей крок може бути не потрібним, оскільки `docker compose up` зробить збірку.
        # Якщо він використовує `image: some-name:tag`, вам потрібно зібрати його тут:
        # run: docker build -t some-name:tag .
        run: echo "Assuming docker compose.yml uses 'build':'' .' or image is pre-built/pulled."

      # --- Зміни тут ---
      - name: Start services with Docker Compose
        # Використовуємо 'docker compose' замість 'docker compose'
        run: docker compose -f docker compose.yml up -d

      - name: Wait for services
        run: sleep 20

      # --- Зміни тут ---
      - name: Check running containers status
        # Використовуємо 'docker compose' замість 'docker compose'
        run: docker compose ps

      - name: Check App Health (Example)
        run: |
          curl --fail http://localhost:5000/status || exit 1

      # --- Зміни тут ---
      - name: Stop and clean up services
        if: always()
        # Використовуємо 'docker compose' замість 'docker compose'
        run: docker compose down -v --remove-orphans

  # --- Етап розгортання видалено ---
  # deploy:
  #   ... (код видалено, оскільки немає сервера для розгортання) ...
